<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a T4 template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

<#
    const string ClassName = "SwitchExtension";
    const string ItemTypeName = "CaseExtension";
    const string CollectionName = "Cases";
    const int Count = 16;
#>

namespace AvaloniaExtensions.Axaml.Markup;

public partial class <#= ClassName #>
{
    /*
     * Have to list these constructor overloads here,
     * because the stupid xaml does not support the "params" keyword.
     * e.g.: ctor(params <#= ItemTypeName #>[] converters) cannot be used.
     */

    private <#= ClassName #>(object to)
        : this()
    {
        To = to;
    }

<#
    for (int i = 2; i <= Count; i++)
    {
#>
    public <#= ClassName #>(object to, <#= string.Join(", ", Enumerable.Range(0, i).Select(index => $"{ItemTypeName} item{index}")) #>)
        : this(to)
    {
<#= string.Join(";\r\n", Enumerable.Range(0, i).Select(index => $"        {CollectionName}.Add(item{index})")) #>;
    }

<#
    }
#>
}
