<Window
    x:Class="AvaloniaExtensions.Axaml.Demo.Views.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:markup="https://codewf.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:AvaloniaExtensions.Axaml.Demo.Models"
    xmlns:vm="using:AvaloniaExtensions.Axaml.Demo.ViewModels"
    Title="Demo"
    Width="600"
    Height="300"
    d:DesignHeight="300"
    d:DesignWidth="600"
    x:DataType="vm:MainWindowViewModel"
    Icon="/Assets/logo.ico"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d">

    <Design.DataContext>
        <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs)
        -->
        <vm:MainWindowViewModel />
    </Design.DataContext>
    <Window.Resources>
        <markup:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <markup:IfConditionConverter x:Key="StatusConditionConverter">
            <markup:IfConditionConverter.True>
                <TextBlock Foreground="Green" Text="运行" />
            </markup:IfConditionConverter.True>
            <markup:IfConditionConverter.False>
                <TextBlock Foreground="DarkOrange" Text="未运行" />
            </markup:IfConditionConverter.False>
        </markup:IfConditionConverter>
        <markup:IsCollectionEmptyConverter x:Key="IsCollectionEmptyConverter" />

        <DataTemplate x:Key="NormalTemplate">
            <TextBlock Foreground="Green" Text="正常" />
        </DataTemplate>
        <DataTemplate x:Key="OverLimitTemplate">
            <TextBlock Foreground="DarkOrange" Text="超限" />
        </DataTemplate>
        <DataTemplate x:Key="OvertimeTemplate">
            <TextBlock Foreground="Red" Text="超时" />
        </DataTemplate>
        <DataTemplate x:Key="UserChangedTemplate">
            <TextBlock Foreground="Red" Text="锁定" />
        </DataTemplate>
    </Window.Resources>
    <Border
        Background="{StaticResource CloudDrawingBrush}"
        Classes="Shadow"
        Theme="{StaticResource CardBorder}">
        <TabControl TabStripPlacement="Left">
            <TabItem Header="If">
                <Border Theme="{StaticResource CardBorder}">
                    <StackPanel>
                        <Button Command="{Binding RaiseChangeStatusCommandHandler}" Content="Change" />
                        <SelectableTextBlock Text="{markup:If {Binding Status}, 已运行, 未运行}" />

                        <ContentControl Content="{Binding Status, Converter={StaticResource StatusConditionConverter}}" />
                    </StackPanel>
                </Border>
            </TabItem>
            <TabItem Header="Switch">
                <Border Theme="{StaticResource CardBorder}">
                    <StackPanel>
                        <Button Command="{Binding RaiseChangeStatusCommandHandler}" Content="Change" />
                        <StackPanel Orientation="Horizontal">
                            <RadioButton Content="Normal" IsChecked="{Binding AlarmStatus, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:AlarmStatus.Normal}}" />
                            <RadioButton Content="OverLimit" IsChecked="{Binding AlarmStatus, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:AlarmStatus.OverLimit}}" />
                            <RadioButton Content="Overtime" IsChecked="{Binding AlarmStatus, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:AlarmStatus.Overtime}}" />
                            <RadioButton Content="UserChanged" IsChecked="{Binding AlarmStatus, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:AlarmStatus.UserChanged}}" />
                        </StackPanel>
                        <ContentControl Content="{Binding AlarmStatus}">
                            <ContentControl.Styles>
                                <Style Selector="ContentControl[Content=Normal]">
                                    <Setter Property="ContentTemplate" Value="{StaticResource NormalTemplate}" />
                                </Style>
                                <Style Selector="ContentControl[Content=OverLimit]">
                                    <Setter Property="ContentTemplate" Value="{StaticResource OverLimitTemplate}" />
                                </Style>
                                <Style Selector="ContentControl[Content=Overtime]">
                                    <Setter Property="ContentTemplate" Value="{StaticResource OvertimeTemplate}" />
                                </Style>
                                <Style Selector="ContentControl[Content=UserChanged]">
                                    <Setter Property="ContentTemplate" Value="{StaticResource UserChangedTemplate}" />
                                </Style>
                            </ContentControl.Styles>
                        </ContentControl>
                    </StackPanel>
                </Border>
            </TabItem>
            <TabItem Header="Converters">
                <Border Theme="{StaticResource CardBorder}">
                    <StackPanel Orientation="Horizontal">
                        <SelectableTextBlock>
                            <Run Text="ItemsA: " />
                            <Run Text="{Binding ItemsA, Converter={StaticResource IsCollectionEmptyConverter}, Mode=OneWay}" />
                        </SelectableTextBlock>
                        <SelectableTextBlock Margin="20,0,0,0">
                            <Run Text="ItemsB: " />
                            <Run Text="{Binding ItemsB, Converter={StaticResource IsCollectionEmptyConverter}, Mode=OneWay}" />
                        </SelectableTextBlock>
                    </StackPanel>
                </Border>
            </TabItem>
        </TabControl>
    </Border>
</Window>
